# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A.
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
# В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X.
# Попробуйте использовать метод count(), а также решите задачу с помощью своего алгоритма (без count).
# Замерьте время работы двух алгоритмов и сравните, подумайте, почему оно отличается.
# *Пример:*
# 5
#     1 2 3 4 5
#     3
#     -> 1

# import time
# 
# input_list = []
# list_len = int(input("Введите количество элементов в массиве: "))
#
# for i in range(list_len):
#     input_list.append(int(input(f"Введите {i + 1} число: ")))
# print(input_list)
# input_x = int(input("Введите число Х: "))
# amount = 0
#
# start = time.perf_counter()
# for i in range(list_len):
#     if input_list[i] == input_x:
#         amount += 1
# print(amount)
# end = time.perf_counter()
# first = end - start
#
# start = time.perf_counter()
# input_tuple = tuple(input_list)
# count = input_tuple.count(input_x)
# print(amount)
# end = time.perf_counter()
# second = end - start
#
# print(first / second)


# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
# В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X
# *Пример:*
# 5
#     1 2 3 4 5
#     6
#     -> 5

# user_list = []
# list_size = int(input("Введите количество элементов в массиве: "))
#
# for i in range(list_size):
#     user_list.append(int(input(f"Введите {i + 1} число: ")))
# print(user_list)
#
# user_x = int(input("Введите число Х: "))
#
# diff = 1
# while True:
#     if user_x + diff in user_list:
#         print(user_x + diff)
#         break
#     elif user_x - diff in user_list:
#         print(user_x - diff)
#         break
#     diff += 1


# *Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка; B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; K – 5 очков; J, X – 8 очков;
# Q, Z – 10 очков. А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские,
# либо только русские буквы.
# *Пример:*
# ноутбук
#     12

# input_str = input("Введите слово: ").upper()
# scrabble = {'A': 1, 'E': 1, 'I': 1, 'O': 1, 'U': 1, 'L': 1, 'N': 1, 'S': 1, 'T': 1, 'R': 1,
#             'D': 2, 'G': 2, 'B': 3, 'C': 3, 'M': 3, 'P': 3, 'F': 4, 'H': 4, 'V': 4, 'W': 4, 'Y': 4,
#             'K': 5, 'J': 8, 'X': 8, 'Q': 10, 'Z': 10, 'А': 1, 'В': 1, 'Е': 1, 'И': 1, 'Н': 1,
#             'О': 1, 'Р': 1, 'С': 1, 'Т': 1, 'Д': 2, 'К': 2, 'Л': 2, 'М': 2, 'П': 2, 'У': 2,
#             'Б': 3, 'Г': 3, 'Ё': 3, 'Я': 3, 'Й': 4, 'Ы': 4, 'Ж': 5, 'З': 5, 'Х': 5, 'Ц': 5, 'Ч': 5,
#             'Ш': 8, 'Э': 8, 'Ю': 8, 'Ф': 10, 'Щ': 10, 'Ъ': 10}
# sum = 0
# for letter in input_str:
#     sum += scrabble[letter]
# print(sum)